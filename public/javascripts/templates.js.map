{"version":3,"file":"public/javascripts/templates.js","sources":["app/templates/_nav.hbs","app/templates/application.hbs","app/templates/home.hbs","app/templates/nextpage.hbs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA,CCAA;AAAA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA,CCAA;AAAA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA,CCAA;AAAA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","sourcesContent":["Ember.TEMPLATES[\"_nav\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n      \t\t<a href=\\\"#\\\"> Home</a>\\n      \t\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n      \t\t<a href=\\\"#\\\"> NextPage</a>\\n      \t\");\n  }\n\n  data.buffer.push(\"<div class=\\\"navbar\\\">\\n  <div class=\\\"navbar-inner\\\">\\n    <a class=\\\"brand\\\" href=\\\"#\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</a>\\n    <ul class=\\\"nav\\\">\\n      \t\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'tagName': (\"li\")\n  },hashTypes:{'tagName': \"STRING\"},hashContexts:{'tagName': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"linkTo\", \"home\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      \t\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'tagName': (\"li\")\n  },hashTypes:{'tagName': \"STRING\"},hashContexts:{'tagName': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"nextpage\", options) : helperMissing.call(depth0, \"linkTo\", \"nextpage\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n    </ul>\\n  </div>\\n</div>\");\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"application\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"container\\\">\\n\\n\t\");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"nav\", options) : helperMissing.call(depth0, \"partial\", \"nav\", options))));\n  data.buffer.push(\"\\n\\n\t <div class=\\\"well\\\">\\n    <h1>Parent view: Application</h1>\\n    \t\\n    \t<div class=\\\"well\\\">\\n    \t\t<p class=\\\"muted\\\">Child view:</p>\\n\t        \");\n  stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t    </div>\\n    </div>\\n\\n</div>\");\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"home\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Go to next page\");\n  }\n\n  data.buffer.push(\"<h2> This is a home view </h2>\\n\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'classNames': (\"btn btn-success\")\n  },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"nextpage\", options) : helperMissing.call(depth0, \"linkTo\", \"nextpage\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"nextpage\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Go back to home page\");\n  }\n\n  data.buffer.push(\"<h2> This is the next page.</h2>\\n\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'classNames': (\"btn btn-success\")\n  },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"linkTo\", \"home\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  return buffer;\n  \n});\nmodule.exports = module.id;"]}