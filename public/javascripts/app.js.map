{"version":3,"sources":["app/app.js","app/helper.js","app/helpers/application.js","app/helpers/home.js","app/helpers/nextpage.js","app/helpers/posts.js","app/initialize.js","app/router.js","app/template.js","app/templates/_nav.hbs","app/templates/application.hbs","app/templates/home.hbs","app/templates/nextpage.hbs","app/templates/posts.hbs","app/templates/posts/index.hbs","app/templates/posts/new.hbs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AAFA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Application bootstrapper\n\nmodule.exports = Em.Application.create();","require('helpers/application');\nrequire('helpers/home');\nrequire('helpers/nextpage');\nrequire('helpers/posts');","var App = require('app');\n\nApp.ApplicationController = Em.Controller.extend({\n\ttitle: \"Ember-Brunch\"\n});\n\n\nApp.ApplicationView = Em.View.extend({\n\n});","var App = require('app');\n\nApp.HomeController = Em.Controller.extend({\n\n});\n\n\nApp.HomeView = Em.View.extend({\n\tdidInsertElement:function(){\n\t\tconsole.log('123');\n\t}\n});","var App = require('app');\n\nApp.NextpageController = Em.Controller.extend({\n\n});\n\n\nApp.NextpageView = Em.View.extend({\n\n});","var App = require('app');\n\nApp.PostsController = Em.Controller.extend({\n\n});\n\n\nApp.PostsView = Em.View.extend({\n\tdidInsertElement: function(){\n\t}\n});","window.App = require('app');\n\n\nrequire('template');\nrequire('helper');\nrequire('router');","var App = require('app');\n\n\nApp.IndexRoute = Em.Route.extend({\n    redirect:function(){\n        this.transitionTo('home');\n    }\n});\n\nApp.Router.map(function(){\n    this.route('index',{path:'/'});\n    this.route('home');\n    this.route('nextpage');\n    this.resource('posts', {path: '/posts'}, function(){\n    \tthis.route('new');\n    });\n});\n\nApp.Router.reopen({\n\tlocation: 'auto'\n});","require('templates/application');\nrequire('templates/home');\nrequire('templates/nextpage');\nrequire('templates/_nav');\nrequire('templates/posts');\nrequire('templates/posts/index');\nrequire('templates/posts/new');","Ember.TEMPLATES[\"_nav\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n      \t\t<a href=\\\"#\\\"> Home</a>\\n      \t\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n      \t\t<a href=\\\"#\\\"> NextPage</a>\\n      \t\");\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n      \t\t<a href=\\\"#\\\"> Posts</a>\\n      \t\");\n  }\n\n  data.buffer.push(\"<div class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"navbar-header\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</a>\\n  </div>\\n\\n\\n    <ul class=\\\"nav navbar-nav\\\">\\n      \t\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'tagName': (\"li\")\n  },hashTypes:{'tagName': \"STRING\"},hashContexts:{'tagName': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"linkTo\", \"home\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      \t\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'tagName': (\"li\")\n  },hashTypes:{'tagName': \"STRING\"},hashContexts:{'tagName': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"nextpage\", options) : helperMissing.call(depth0, \"linkTo\", \"nextpage\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      \t\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'tagName': (\"li\")\n  },hashTypes:{'tagName': \"STRING\"},hashContexts:{'tagName': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts.index\", options) : helperMissing.call(depth0, \"linkTo\", \"posts.index\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n    </ul>\\n\\n</div>\\n\\n\");\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"application\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"container\\\">\\n\\n\t\");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"nav\", options) : helperMissing.call(depth0, \"partial\", \"nav\", options))));\n  data.buffer.push(\"\\n\\n\t <div class=\\\"well\\\">\\n    <h1>Parent view: Application</h1>\\n    \t\\n    \t<div class=\\\"well\\\">\\n    \t\t<p class=\\\"muted\\\">Child view:</p>\\n\t        \");\n  stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t    </div>\\n    </div>\\n\\n</div>\");\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"home\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Go to next page\");\n  }\n\n  data.buffer.push(\"<h2> This is a home view </h2>\\n\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'classNames': (\"btn btn-success\")\n  },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"nextpage\", options) : helperMissing.call(depth0, \"linkTo\", \"nextpage\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"nextpage\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Go back to home page\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"Go to posts page\");\n  }\n\n  data.buffer.push(\"<h2> This is the next page.</h2>\\n\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'classNames': (\"btn btn-success\")\n  },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"linkTo\", \"home\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n\");\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'classNames': (\"btn btn-success\")\n  },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts\", options) : helperMissing.call(depth0, \"linkTo\", \"posts\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"posts\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1;\n\n\n  data.buffer.push(\"Posts Parent view\\n<p>\\n\t\");\n  stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</p>\\n\\n\");\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"posts/index\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Create a post\");\n  }\n\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'classNames': (\"btn btn-success\")\n  },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts.new\", options) : helperMissing.call(depth0, \"linkTo\", \"posts.new\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  else { data.buffer.push(''); }\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[\"posts/new\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Back to Posts page\");\n  }\n\n  stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{\n    'classNames': (\"btn btn-success\")\n  },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts\", options) : helperMissing.call(depth0, \"linkTo\", \"posts\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n\\n\");\n  return buffer;\n  \n});\nmodule.exports = module.id;"]}